{"version":3,"sources":["styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","styles/UsernameField.js","styles/ChoiceDisplay.js","styles/PlayNow.js","components/Login.js","components/AssignAvatar.js","components/Signup.js","components/Header.js","components/LandingPage.js","components/Profile.js","components/VictoryPage.js","components/GameBoard.js","components/Card.js","components/Leaderboard.js","App.js","index.js"],"names":["styled","div","COLORS","primary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","label","textarea","span","p","UsernameField","ChoiceDisplay","Login","onLogin","navigate","useNavigate","useState","username","setUsername","password","setPassword","isLoading","setIsLoading","setErrors","className","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","resp","ok","json","user","error","errors","swal","htmlFor","type","id","autoComplete","value","onChange","target","onClick","AssignAvatar","setAvatar","avatars","map","avatar","src","img_url","alt","name","Signup","setAvatars","useEffect","data","avatar_id","response","Nav","nav","NavMenu","a","Logout","Welcome","Header","setLoggedIn","loggedIn","to","toUpperCase","console","log","LandingPage","isLoggedIn","MtAlgoHeader","PlayNowBtn","InstructionPargph","Profile","resetUser","questions","showQ","setShowQ","visibleQ","setVisibleQ","captureVisibleQ","clickedQ","quest","filter","question","title","text","icon","buttons","dangerMode","willDelete","handleDelete","score","handleShowQ","conquered","VictoryPage","GameBoard","setUser","solution","setSolution","prompt","answer","Card","idx","Leaderboard","usersData","setUsersData","sort","b","indexOf","App","setQuestions","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAEYA,IAAOC,IAAV,iK,4CCAHC,EAAS,CACbC,QAAS,CACP,SAAU,UACV,WAAY,UAehB,I,cAAMC,EAAaJ,IAAOK,OAAV,mPAYVC,EAAaN,YAAOI,EAAPJ,CAAH,4HAQVO,EAAgBP,YAAOI,EAAPJ,CAAH,yKASJQ,EAxCf,YAAoE,IAC9DC,EAD6D,IAAjDC,eAAiD,MAAvC,OAAuC,MAA/BC,aAA+B,MAAvB,UAAuB,EAATC,EAAS,iBAQjE,MANgB,SAAZF,EACFD,EAAYH,EACS,YAAZI,IACTD,EAAYF,GAGP,cAACE,EAAD,aAAWI,MAAOX,EAAOS,IAAYC,KCL/BE,EAVGd,IAAOC,IAAV,wMCgBAc,EAhBDf,IAAOgB,MAAV,yUCUIC,EAVDjB,IAAOkB,MAAV,2KCAMlB,IAAOmB,SAAV,2PCSEnB,IAAOC,IAAV,4LAWCD,IAAOoB,KAAV,kLAUKpB,IAAOqB,EAAV,0CArBb,I,UCCeC,EAVOtB,IAAOC,IAAV,yMCeJsB,EAfOvB,IAAOC,IAAV,4SCkBnB,IAAMG,EAAaJ,IAAOK,OAAV,6R,GAaGL,YAAOI,EAAPJ,CAAH,4HAQMA,YAAOI,EAAPJ,CAAH,yK,sBCkCJwB,MAtEf,YAA2B,IAAXC,EAAU,EAAVA,QACNC,EAAWC,cACjB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA4BN,mBAAS,IAArC,mBAAeO,GAAf,WA4BA,OACG,uBAAMC,UAAU,OAAOC,SA3B1B,SAAsBC,GAClBA,EAAEC,iBACFL,GAAa,GACbM,MAAM,SAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhB,WAAUE,eAChCe,MAAK,SAACC,GACPb,GAAa,GACTa,EAAKC,IACPD,EAAKE,OACJH,MAAK,SAACI,GAAD,OAAUzB,EAAQyB,MACxBxB,EAAS,MAEPqB,EAAKE,OACLH,MAAK,SAACK,GACLhB,EAAUgB,EAAMC,QAChBC,IAAK,uCAQb,UACC,eAAC,EAAD,WACI,cAAC,EAAD,CAAOC,QAAQ,WAAf,sBACA,cAAC,EAAD,CACAC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAO7B,EACP8B,SAAU,SAACrB,GAAD,OAAOR,EAAYQ,EAAEsB,OAAOF,aAGzC,eAAC,EAAD,WACG,cAAC,EAAD,CAAOJ,QAAQ,WAAf,sBACA,cAAC,EAAD,CACAC,KAAK,WACLC,GAAG,WACHC,aAAa,mBACbC,MAAO3B,EACP4B,SAAU,SAACrB,GAAD,OAAON,EAAYM,EAAEsB,OAAOF,aAGzC,cAAC,EAAD,UACG,cAAC,EAAD,CAAQhD,QAAQ,OAAOC,MAAM,UAAU4C,KAAK,SAA5C,SACEtB,EAAY,aAAe,YAGhC,cAAC,EAAD,UACE,4DAED,cAAC,EAAD,UACC,cAAC,EAAD,CAAQ4B,QAAS,WAAOnC,EAAS,YAAjC,0BC5CIoC,MAtBf,YAA6C,IAAtBC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAa9B,OACI,qBAAKR,GAAG,mBAAR,SACMQ,EAAQC,KAAI,SAAAC,GACV,OAAO,qBAAqB9B,UAAU,cAAc+B,IAAKD,EAAOE,QAASC,IAAKH,EAAOI,KAAMT,QAAS,kBAAME,EAAUG,KAAnGA,EAAOV,UCmEzBe,I,UAAAA,EAjFf,YAA8B,IAAZ9C,EAAW,EAAXA,QACVC,EAAWC,cACjB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOsC,EAAP,KAAeH,EAAf,KACA,EAA4BnC,mBAAS,IAArC,mBAAeO,GAAf,WACA,EAAkCP,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOoC,EAAP,KAAgBQ,EAAhB,KAuCA,OArCAC,qBAAU,WACRjC,MAAM,YACHM,MAAK,SAAAC,GAAI,OAAIA,EAAKE,UAClBH,MAAK,SAAA4B,GACFF,EAAWE,QAEd,IAgCH,uBAAMrC,SA9BR,SAAsBC,GAClBA,EAAEC,iBACFJ,EAAU,IACVD,GAAa,GAEbM,MAAM,UAAW,CACbC,OAAQ,OACRC,QAAS,CACL,eAAiB,oBAErBC,KAAMC,KAAKC,UAAU,CACjBhB,SAAUA,EACVE,SAAUA,EACV4C,UAAWT,EAAOV,OAGzBV,MAAK,SAAA8B,GACF1C,GAAa,GACV0C,EAAS5B,IACR4B,EAAS3B,OACRH,MAAK,SAAAI,GAAI,OAAIzB,EAAQyB,MACtBxB,EAAS,MAETkD,EAAS3B,OACRH,MAAK,SAAAK,GAAK,OAAIhB,EAAUgB,EAAMC,eAMzC,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOE,QAAQ,WAAf,sBACA,cAAC,EAAD,CACEC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAO7B,EACP8B,SAAU,SAACrB,GAAD,OAAOR,EAAYQ,EAAEsB,OAAOF,aAG1C,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,WAAf,sBACA,cAAC,EAAD,CACEC,KAAK,WACLC,GAAG,WACHE,MAAO3B,EACP4B,SAAU,SAACrB,GAAD,OAAON,EAAYM,EAAEsB,OAAOF,QACtCD,aAAa,wBAGjB,cAAC,EAAD,UACE,cAAC,EAAD,CAAOH,QAAQ,WAAf,kCAEA,cAAC,EAAD,CAAcS,UAAWA,EAAWC,QAASA,IAC/C,cAAC,EAAD,UACE,cAAC,EAAD,UAAgBE,EAAOI,KAAOJ,EAAOI,KAAO,qBAE9C,cAAC,EAAD,UACE,cAAC,EAAD,CAAQf,KAAK,SAAb,SAAuBtB,EAAY,aAAe,kB,OCpC1D,I,QAAM4C,GAAM7E,IAAO8E,IAAV,+RAeHC,GAAU/E,IAAOC,IAAV,ouCAwDPuB,GAAQxB,IAAOgF,EAAV,0UAgBLC,GAASjF,IAAOgF,EAAV,0UAgBNE,GAAUlF,IAAOoB,KAAV,kNAUE+D,GAxJf,YAA0C,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,SACtB3D,EAAWC,cAaf,OACI,eAACkD,GAAD,WACI,eAACE,GAAD,WACG,eAAC,IAAD,CAAS3C,UAAU,QAAQkD,GAAG,IAA9B,UACI,qBAAKnB,IAAI,wBAAwBE,IAAI,KACrC,2CAEJ,eAAC,IAAD,CAASjC,UAAU,QAAQkD,GAAID,EAAU,WAAa,SAAtD,UACI,qBAAKlB,IAAI,sBAAsBE,IAAI,KACnC,8CAEJ,eAAC,IAAD,CAASjC,UAAU,QAAQkD,GAAID,EAAS,QAAW,SAAnD,UACI,qBAAKlB,IAAI,8BAA8BE,IAAI,KAC3C,2CAEJ,eAAC,IAAD,CAASjC,UAAU,QAAQkD,GAAG,eAA9B,UACE,qBAAKnB,IAAI,2BAA2BE,IAAI,KACxC,qDAGL,cAACa,GAAD,UAAUG,EAAQ,iBAAaA,EAASxD,SAAS0D,cAA/B,KAAkD,OACjEF,EAAuE,cAACJ,GAAD,CAAQpB,QAAS,kBA/BjG2B,QAAQC,IAAI,2BACZjD,MAAM,UAAW,CAAEC,OAAQ,WAC1BK,MAAK,SAAC8B,GACDA,EAAS5B,KACXtB,EAAS,UACT0D,EAAY,WA0BgE,oBAA5D,cAAC,GAAD,CAAOvB,QAAS,WAAOnC,EAAS,WAAhC,uBCjBXgE,OAnBf,YAAoC,IAAdC,EAAa,EAAbA,WACZjE,EAAWC,cAEjB,OACI,gCACA,eAACiE,GAAD,WACI,4CACA,oBAAIxD,UAAU,kBAAd,4CAEA,eAACyD,GAAD,WACA,cAACC,GAAD,UACO,sBAAM1D,UAAU,kBAAhB,iPAELuD,EAA+E,cAAC,EAAD,CAAQ9B,QAAS,WAAOnC,EAAS,UAAjC,uBAAlE,cAAC,EAAD,CAAQmC,QAAS,WAAOnC,EAAS,WAAjC,8BASrBkE,GAAe5F,IAAOC,IAAV,uNASZ4F,GAAa7F,IAAOC,IAAV,iIAMV6F,GAAoB9F,IAAOqB,EAAV,0R,MC4CR0E,OAhFf,YAAgD,IAA9B7C,EAA6B,EAA7BA,KAAM8C,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,UACzBvE,EAAWC,cACjB,EAA0BC,oBAAS,GAAnC,mBAAOsE,EAAP,KAAcC,EAAd,KACA,EAAgCvE,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBC,EAAjB,KAmCA,SAASC,EAAgBC,GACrB,IAAIC,EAAQP,EAAUQ,QAAO,SAAAC,GAAQ,OAAIA,EAASlD,KAAO+C,EAAS/C,MAClE6C,EAAYG,EAAM,IActB,OACI,sBAAKhD,GAAG,eAAR,UACI,qBAAKpB,UAAU,SAAf,SACI,gDAEJ,qBAAKA,UAAU,SAAf,SACI,qBAAKoB,GAAG,iBAAiBW,IAAKjB,EAAKgB,OAAOE,QAASC,IAAKnB,EAAKgB,OAAOI,SAExE,sBAAKlC,UAAU,SAAf,UACI,4CAAec,EAAKrB,YACpB,0CAAaqB,EAAKgB,OAAOI,QACzB,cAAC,EAAD,CAAQT,QAAS,kBA5D7B,SAAsBX,GAClBG,IAAK,CACDsD,MAAO,UACPC,KAAM,8DACNC,KAAM,UACNC,SAAS,EACTC,YAAY,IAEbjE,MAAK,SAACkE,GACDA,GACAxE,MAAM,UAAD,OAAWU,EAAKM,IAAM,CACvBf,OAAQ,WAEPK,MAAK,SAAA4B,GAAI,OAAIc,QAAQC,IAAIf,MAC9BrB,IAAK,8CAA+C,CAChDwD,KAAM,YAEVb,EAAU,MACVtE,EAAS,MAEX2B,IAAK,qCAwCoB4D,CAAa/D,IAApC,+BAEJ,qBAAKd,UAAU,SAAf,SACI,wDAEJ,qBAAKA,UAAU,SAAf,SA3BR,SAAmB6D,GACf,OAAQA,EAAUhC,KAAI,SAAAyC,GAClB,GAAKxD,EAAKgE,MAAQ,EAAKR,EAASlD,GAC5B,OAAQ,gCACJ,eAAC,EAAD,eAASkD,EAASlD,MAClB,cAAC,EAAD,CAAQK,QAAU,YAlBlC,SAAqB6C,IACbA,EAASlD,KAAO4C,EAAS5C,KAER,IAAV0C,IADPC,GAAS,SAAAD,GAAK,OAAKA,KAgBciB,CAAYT,GAAWJ,EAAgBI,IAAhE,4BAFcA,EAASlD,OAyB1B4D,CAAUnB,KAEf,qBAAK7D,UAAU,SAAf,SACK8D,EAAQ,4BAAIE,EAASM,WAAgB,WC9EvC,SAASW,KACpB,OACI,gCACI,oBAAIjF,UAAU,WAAd,8BACA,uEACA,iE,MCuEGkF,OAvEf,YAAgD,IAA5BpE,EAA2B,EAA3BA,KAAMqE,EAAqB,EAArBA,QAAStB,EAAY,EAAZA,UACzBvE,EAAWC,cACjB,EAAgCC,mBAAS,IAAzC,mBAAO4F,EAAP,KAAiBC,EAAjB,KAwBA,OACI,mCACA,sBAAKjE,GAAG,YAAR,UACI,qBAAKpB,UAAU,WAAf,SACI,+CAAgBc,EAAKrB,SAArB,iBAAsCqB,EAAKgB,OAAOI,UAEtD,sBAAKlC,UAAU,gBAAf,UACI,6BAAKc,EAAKgE,MAAQ,EAAb,gBAA0BhE,EAAKgE,MAAQ,GAAM,OAClD,4BAAIhE,EAAKgE,MAAQ,EAAb,UAAoBjB,EAAU/C,EAAKgE,OAAOQ,QAAW,OACzD,4BAAIxE,EAAKgE,MAAQ,EAAb,UAAoBjB,EAAU/C,EAAKgE,OAAOR,UAAa,OAC3C,IAAfxD,EAAKgE,OAAe,cAACG,GAAD,OAExBnE,EAAKgE,MAAQ,EACV,qBAAK9E,UAAU,cAAf,SACI,sBAAMA,UAAU,OAAOC,SApCvC,SAAqBC,GACjBA,EAAEC,iBACFiD,QAAQC,IAAIvC,GACT,UAAGsE,KAAH,UAAqBvB,EAAU/C,EAAKgE,OAAOS,QAC1CnF,MAAM,UAAD,OAAWU,EAAKM,IAAM,CACvBf,OAAQ,QACRC,QAAS,CACL,eAAiB,oBAErBC,KAAMC,KAAKC,UAAU,CACjBqE,MAAOhE,EAAKgE,UAGnBpE,MAAK,SAAA8B,GAAQ,OAAIA,EAAS3B,UAC1BH,MAAK,SAAA4B,GAAI,OAAI6C,EAAQ7C,OAEtBrB,IAAK,aACLmC,QAAQC,IAAI,uBAAyB+B,KAmB7B,SACI,eAAC,EAAD,WACI,cAAC,EAAD,qBACA,cAAC,EAAD,CAAOjE,KAAK,OACZC,GAAG,WACHE,MAAO8D,EACP7D,SAAU,SAACrB,GAAD,OAAOmF,EAAYnF,EAAEsB,OAAOF,UAEtC,cAAC,EAAD,CAAQH,KAAK,SAAb,2BAIZ,cAAC,EAAD,CAAQnB,UAAU,MAAMyB,QAAS,WAAOnC,EAAS,MAAjD,yBAEU,IAAbwB,EAAKgE,MAAW,qBAAK/C,IAAKjB,EAAKgB,OAAOE,QAAShC,UAAU,YAAYiC,IAAKnB,EAAKgB,OAAOI,OAAU,KACnF,IAAbpB,EAAKgE,MAAW,qBAAK/C,IAAKjB,EAAKgB,OAAOE,QAAShC,UAAU,YAAYiC,IAAKnB,EAAKgB,OAAOI,OAAU,KACnF,IAAbpB,EAAKgE,MAAW,qBAAK/C,IAAKjB,EAAKgB,OAAOE,QAAShC,UAAU,YAAYiC,IAAKnB,EAAKgB,OAAOI,OAAU,KACnF,IAAbpB,EAAKgE,MAAW,qBAAK/C,IAAKjB,EAAKgB,OAAOE,QAAShC,UAAU,YAAYiC,IAAKnB,EAAKgB,OAAOI,OAAU,KACnF,IAAbpB,EAAKgE,MAAW,qBAAK/C,IAAKjB,EAAKgB,OAAOE,QAAShC,UAAU,YAAYiC,IAAKnB,EAAKgB,OAAOI,OAAU,KACnF,IAAbpB,EAAKgE,MAAW,qBAAK/C,IAAKjB,EAAKgB,OAAOE,QAAShC,UAAU,gBAAgBiC,IAAKnB,EAAKgB,OAAOI,OAAU,KACrG,cAAC,EAAD,CAAOlC,UAAU,aAAjB,4BACA,cAAC,EAAD,CAAOA,UAAU,MAAjB,wBACA,cAAC,EAAD,CAAOA,UAAU,MAAjB,2BACA,cAAC,EAAD,CAAOA,UAAU,SAAjB,0BACA,cAAC,EAAD,CAAOA,UAAU,SAAjB,yBACA,cAAC,EAAD,CAAOA,UAAU,SAAjB,8BCrDGwF,OAjBf,YAA4B,IAAblD,EAAY,EAAZA,KAAMmD,EAAM,EAANA,IAEjB,OACI,sBAAKrE,GAAG,eAAR,UACI,qBAAKpB,UAAU,SAAf,SACI,qBAAKoB,GAAG,iBAAiBW,IAAKO,EAAKR,OAAOE,QAASC,IAAKK,EAAKR,OAAOI,SAExE,sBAAKlC,UAAU,SAAf,UACI,wCAAWyF,EAAM,KACjB,yCAAYnD,EAAKwC,SACjB,6BAAa,IAARW,EAAA,uBAAkBnD,EAAK7C,UAAa6C,EAAK7C,WAC9C,6BAAK6C,EAAKR,OAAOI,cCgBlBwD,OA1Bf,WACI,MAAkClG,mBAAS,IAA3C,mBAAOmG,EAAP,KAAkBC,EAAlB,KAWA,OATAvD,qBAAU,WACNjC,MAAM,UACLM,MAAK,SAAAC,GAAI,OAAIA,EAAKE,UAClBH,MAAK,SAAA4B,GAAI,OAAIsD,EAAatD,EAAKuD,MAAK,SAACjD,EAAGkD,GACrC,OAAGlD,EAAEkC,MAAQgB,EAAEhB,MAAc,GAChB,WAElB,IACH1B,QAAQC,IAAIsC,GACLA,EAAU9D,KAAI,SAACS,GAAD,OAAU,cAAC,GAAD,CAAMmD,IAAKE,EAAUI,QAAQzD,GAAqBA,KAAMA,GAAfA,EAAKlB,QCqClE4E,OAzCf,WACE,MAAwBxG,mBAAS,MAAjC,mBAAOsB,EAAP,KAAaqE,EAAb,KACA,EAAkC3F,mBAAS,IAA3C,mBAAOqE,EAAP,KAAkBoC,EAAlB,KAuBA,OArBA5D,qBAAU,WACRjC,MAAM,cACHM,MAAK,SAAAC,GAAI,OAAIA,EAAKE,UAClBH,MAAK,SAAA4B,GACF2D,EAAa3D,QAEhB,IAEHD,qBAAU,WACRjC,MAAM,OACLM,MAAK,SAAA8B,GACJY,QAAQC,IAAIb,GACRA,EAAS5B,GACX4B,EAAS3B,OACRH,MAAK,SAAAI,GACJqE,EAAQrE,MAEJsC,QAAQC,IAAI,gBAErB,IAGH,sBAAKrD,UAAU,MAAf,UACE,cAAC,GAAD,CAAQgD,YAAamC,EAASlC,SAAUnC,IACxC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,GAAD,CAAa7C,WAAYzC,MACxD,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,SAASC,QAAkB,OAATtF,EAAgB,cAAC,EAAD,CAAOzB,QAAS8F,IAAa,OACjF,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,UAAUC,QAAkB,OAATtF,EAAgB,cAAC,EAAD,CAAQzB,QAAS8F,IAAa,OACnF,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,QAAQC,QAAS,cAAC,GAAD,CAAWtF,KAAMA,EAAMqE,QAASA,EAAStB,UAAWA,MACvF,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAM,WAAWC,QAAStF,EAAM,cAAC,GAAD,CAASA,KAAMA,EAAM8C,UAAWuB,EAAStB,UAAWA,IAAgB,OACjH,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,eAAeC,QAAS,cAAC,GAAD,aCvClDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c00c7dbf.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border-radius: 6px;\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\n    0 0 0 1px rgb(10 10 10 / 2%);\n  padding: 16px;\n`;\n\nexport default Box;","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"#4f2004\",\n    \"--accent\": \"white\",\n  }\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;","import styled from \"styled-components\";\n\nconst FormField = styled.div`\n    display: flex;\n    position: relative;\n    justify-content:center;\n    margin-top: 30px;\n    margin-left: 20px;\n    margin-right: 20px;\n    align-items: center;\n`;\n\nexport default FormField;","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  display: flex;\n  margin-top: auto;\n  margin-bottom: auto;\n  align-items:center;\n  justify-content: center;\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  width: 250px;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n`;\n\nexport default Input;","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: #363636;\n  display: block;\n  font-size: 1.25rem;\n  font-weight: 700;\n  padding: 5px;\n  font-family: \"Copperplate\", fantasy;\n  \n`;\n\nexport default Label;","import styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  resize: none;\n`;\n\nexport default Textarea;","import styled from \"styled-components\";\n\nfunction Error({ children }) {\n  return (\n    <Wrapper>\n      <Alert>!</Alert>\n      <Message>{children}</Message>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: red;\n  background-color: mistyrose;\n  border-radius: 6px;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n`;\n\nconst Alert = styled.span`\n  background-color: white;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  font-weight: bold;\n  display: grid;\n  place-content: center;\n`;\n\nconst Message = styled.p`\n  margin: 0;\n`;\n\nexport default Error;","import styled from \"styled-components\";\n\nconst UsernameField = styled.div`\n    display: flex;\n    position: relative;\n    justify-content:center;\n    margin-top: 100px;\n    margin-left: 20px;\n    margin-right: 20px;\n    align-items: center;\n`;\n\nexport default UsernameField;","import styled from \"styled-components\";\n\nconst ChoiceDisplay = styled.div`\n  color: #363636;\n  background-color: #F8CCA7;\n  display: block;\n  font-size: 1.75rem;\n  font-weight: 700;\n  padding: 10px;\n  font-family: \"Copperplate\", fantasy;\n  min-height: 40px;\n  min-width: 100px;\n  border: 2.5px solid #363636;\n  border-radius: 15px;\n  \n`;\n\nexport default ChoiceDisplay;","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"#4f2004\",\n    \"--accent\": \"white\",\n  }\n};\n\nfunction PlayNow({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 2.15rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  font-family: Copperplate, fantasy;\n  padding: 15px 30px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default PlayNow;","import React, {useState} from 'react'\nimport { Button, Error, Input, FormField, Label, UsernameField } from \"../styles\";\nimport {useNavigate} from 'react-router-dom'\nimport swal from 'sweetalert'\n\nfunction Login({onLogin}) {\n    const navigate = useNavigate();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [errors, setErrors] = useState([])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(\"/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ username, password }),\n        }).then((resp) => {\n          setIsLoading(false);\n          if (resp.ok) {\n            resp.json()\n            .then((user) => onLogin(user));\n            navigate('/')\n          } else {\n              resp.json()\n             .then((error) => {\n               setErrors(error.errors)\n               swal(`Invalid username or password`)\n             })\n             \n          }\n        });\n      }\n\n    return (\n       <form className=\"form\" onSubmit={handleSubmit}>\n        <UsernameField>\n            <Label htmlFor=\"username\">Username</Label>\n            <Input\n            type=\"text\"\n            id=\"username\"\n            autoComplete=\"off\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            />\n        </UsernameField>\n         <FormField>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            />\n        </FormField>\n         <FormField>\n            <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n             {isLoading ? \"Loading...\" : \"LOGIN\"}\n            </Button>\n         </FormField>\n         <FormField>\n           <span>DON'T HAVE AN ACCOUNT?</span>\n          </FormField>\n          <FormField>\n           <Button onClick={() => {navigate('/signup')}}>SIGNUP</Button>\n         </FormField>\n       </form>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport '../App.css';\n\nfunction AssignAvatar({setAvatar, avatars}) {\n\n\n    // function renderAvatars() {\n    //     return (avatars.map(avatar => {\n    //             <div>\n    //                 <input id={avatar.id} type=\"radio\" name=\"selectavatar\" onClick={setAvatar(avatar)}></input>\n    //                 <img src={avatar.img_url} alt={avatar.name}/>\n    //             </div>})\n    //     )\n    // }\n\n\n    return (\n        <div id=\"avatar-container\">\n            {(avatars.map(avatar => {\n                return <img key={avatar.id} className=\"avatar-icon\" src={avatar.img_url} alt={avatar.name} onClick={() => setAvatar(avatar)}/> })\n        )}\n        </div>\n    )\n}\n\nexport default AssignAvatar\n","import React, { useState, useEffect } from \"react\";\nimport AssignAvatar from \"./AssignAvatar\";\nimport { Button, Input, FormField, Label, UsernameField, ChoiceDisplay } from \"../styles\";\nimport {useNavigate} from 'react-router-dom'\n\nfunction Signup({ onLogin }) {\n  const navigate = useNavigate()\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [avatar, setAvatar] = useState({});\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [avatars, setAvatars] = useState([])\n\n  useEffect(() => {\n    fetch('/avatars')\n      .then(resp => resp.json())\n      .then(data => {\n          setAvatars(data)\n      });\n    }, []);\n\n  function handleSubmit(e) {\n      e.preventDefault();\n      setErrors([])\n      setIsLoading(true);\n\n      fetch(\"/signup\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\" : \"application/json\",\n          },\n          body: JSON.stringify({\n              username: username,\n              password: password,\n              avatar_id: avatar.id\n          }),\n      })\n      .then(response => {\n          setIsLoading(false);\n          if(response.ok) {\n              response.json()\n              .then(user => onLogin(user));\n              navigate('/')\n          } else {\n              response.json()\n              .then(error => setErrors(error.errors))\n          }\n      });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <UsernameField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </UsernameField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"imageUrl\">Choose Your Avatar</Label>\n      </FormField>\n        <AssignAvatar setAvatar={setAvatar} avatars={avatars} />\n      <FormField>\n        <ChoiceDisplay>{avatar.name ? avatar.name : \"Click an Image\"}</ChoiceDisplay>\n      </FormField>\n      <FormField>\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n      </FormField>\n    </form>\n  );\n}\nexport default Signup\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport '../App.css'\nimport {useNavigate} from 'react-router-dom'\n\nfunction Header({setLoggedIn, loggedIn}) {\n    let navigate = useNavigate()\n    \n    function handleLogout() {\n      console.log(\"in logout function\")\n      fetch(\"/logout\", { method: \"DELETE\" })\n      .then((response) => {\n        if (response.ok) {\n          navigate('/login')\n          setLoggedIn(null);\n        }\n      });\n    }\n  \n    return (\n        <Nav>\n            <NavMenu>\n               <NavLink className='links' to='/'>\n                   <img src=\"/images/home-icon.svg\" alt=''/>\n                   <span>HOME</span>\n               </NavLink>\n               <NavLink className='links' to={loggedIn? '/profile' : '/login'}>\n                   <img src=\"/images/user-32.png\" alt=''/>\n                   <span>PROFILE</span>\n               </NavLink>\n               <NavLink className='links' to={loggedIn? `/play` : '/login'}>\n                   <img src=\"/images/play-icon-white.png\" alt=''/>\n                   <span>PLAY</span>\n               </NavLink>\n               <NavLink className='links' to='/leaderboard'>\n                 <img src=\"/images/trophy-3-256.png\" alt=''/>   \n                 <span>LEADERBOARD</span>\n               </NavLink>\n            </NavMenu>\n            <Welcome>{loggedIn ? `HELLO, ${loggedIn.username.toUpperCase()}!` : null }</Welcome>\n            { !loggedIn ? <Login onClick={() => {navigate('/login')}}>LOGIN</Login> : <Logout onClick={() => handleLogout()}>LOGOUT</Logout>}\n        </Nav>\n    )\n}\nconst Nav = styled.nav`\n    position:fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    background-color: #4f2004;\n    display: flex;\n    justify-content: space-between;\n    align-items:center;\n    padding: 0 25px;\n    letter-spacing: 16;\n    z-index: 3\n`;\n\nconst NavMenu = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: row nowrap;\n  height: 100%;\n  justify-content: flex-end;\n  margin: 0px;\n  padding: 0px;\n  position: relative;\n  margin-right: auto;\n  margin-left: 25px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 0 12px;\n    img {\n      height: 20px;\n      min-width: 20px;\n      width: 20px;\n      z-index: auto;\n    }\n    span {\n      color: rgb(249, 249, 249);\n      font-size: 13px;\n      letter-spacing: 1.42px;\n      line-height: 1.08;\n      padding: 2px 0px;\n      white-space: nowrap;\n      position: relative;\n      &:before {\n        background-color: rgb(249, 249, 249);\n        border-radius: 0px 0px 4px 4px;\n        bottom: -6px;\n        content: \"\";\n        height: 2px;\n        left: 0px;\n        opacity: 0;\n        position: absolute;\n        right: 0px;\n        transform-origin: left center;\n        transform: scaleX(0);\n        transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94);\n        visibility: hidden;\n        width: auto;\n      }\n    }\n    &:hover {\n      span:before {\n        transform: scaleX(1);\n        visibility: visible;\n        opacity: 1 !important;\n      }\n    }\n  }\n`\n\nconst Login = styled.a`\n  background-color: white;\n  padding: 8px 16px;\n  text-transform: uppercase;\n  letter-spacing: 1.5px;\n  border: 1px solid #f9f9f9;\n  border-radius: 4px;\n  transition: all 0.2s ease 0s;\n  &:hover {\n    cursor: pointer;\n    background: #febd97;\n    color: #000;\n    border-color: white;\n  }\n`;\n\nconst Logout = styled.a`\n  background-color: white;\n  padding: 8px 16px;\n  text-transform: uppercase;\n  letter-spacing: 1.5px;\n  border: 1px solid #f9f9f9;\n  border-radius: 4px;\n  transition: all 0.2s ease 0s;\n  &:hover {\n    cursor: pointer;\n    background: #febd97;\n    color: #000;\n    border-color: white;\n  }\n`;\n\nconst Welcome = styled.span`\n    color: rgb(249, 249, 249);\n    font-size: 13px;\n    letter-spacing: 1.42px;\n    line-height: 1.08;\n    padding: 0px 10px;\n    white-space: nowrap;\n    position: relative;\n`\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\nimport {useNavigate} from 'react-router-dom'\nimport {Button} from \"../styles\"\n\nfunction LandingPage({isLoggedIn}) {\n    const navigate = useNavigate();\n\n    return (\n        <div>\n        <MtAlgoHeader>\n            <h1>Mount Algo</h1>\n            <h3 className=\"subheading-fade\">Algorithm Adventures Await!</h3>\n        </MtAlgoHeader>\n            <PlayNowBtn>\n            <InstructionPargph> \n                   <span className=\"subheading-fade\">To complete these challenges you will need to open your favorite IDE. We recommend writing your code in the IDE and then running it in the browser console to test output. Copy the output and paste it into the solution field. </span>\n            </InstructionPargph>    \n            {!isLoggedIn ? <Button onClick={() => {navigate('/login')}}>PLAY NOW!</Button> : <Button onClick={() => {navigate('/play')}}>PLAY NOW!</Button> }      \n            </PlayNowBtn>\n        </div>\n    )\n}\n\nexport default LandingPage\n\n\nconst MtAlgoHeader = styled.div`\n    margin-top: 150px;\n    position: relative;\n    height: 100%;\n    box-sizing: border-box;\n    justify-content: left;\n    color: #4f2004;\n    font-family: \"Copperplate\", fantasy\n`\nconst PlayNowBtn = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 50px;\n`\nconst InstructionPargph = styled.p`\n    position: absolute; \n    margin-top: 50%;\n    margin-left: 40%;\n    margin-right: 50%;\n    margin-bottom: 25%;\n    display: flex;\n    width: 800px;\n    font-weight: bold;\n    color: #eab676;\n    font-size: 0.75em;\n    text-align: center\n`","import React, {useState} from 'react';\nimport '../Profile.css'\nimport { Label, Button } from \"../styles\"\nimport {useNavigate} from 'react-router-dom'\nimport swal from 'sweetalert'\n\nfunction Profile({user, resetUser, questions}) {\n    const navigate = useNavigate()\n    const [showQ, setShowQ] = useState(false)\n    const [visibleQ, setVisibleQ] = useState({})\n\n    function handleDelete(user) {\n        swal({\n            title: \"WARNING\",\n            text: \"Once deleted, you will not be able to recover this profile.\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n                fetch(`/users/${user.id}`, {\n                    method: \"DELETE\"\n                })\n                    .then(data => console.log(data))\n                swal(\"You have successfully deleted your profile.\", {\n                    icon: \"success\",\n                });\n                resetUser(null)\n                navigate('/')\n            } else {\n              swal(\"You live to fight another day!\");\n            }\n          });\n    }\n\n    function handleShowQ(question) {\n        if (question.id === visibleQ.id) {\n            setShowQ(showQ => !showQ)\n        } else if (showQ === false) {\n            setShowQ(showQ => !showQ)\n        }\n    }\n\n    function captureVisibleQ(clickedQ) {\n        let quest = questions.filter(question => question.id === clickedQ.id)\n        setVisibleQ(quest[0])\n    }\n\n    function conquered(questions) {\n        return (questions.map(question => {\n            if ((user.score + 1) > question.id) {\n                return (<div key={question.id}>\n                    <Label>Q{question.id}</Label>\n                    <Button onClick={ () => {handleShowQ(question); captureVisibleQ(question) }}>See Question</Button>\n                    </div>)\n            }}\n            ))\n    }\n    \n    return (\n        <div id=\"profile-card\">\n            <div className=\"grid-1\">\n                <h1>User Profile</h1>\n            </div>\n            <div className=\"grid-2\">\n                <img id=\"profile-avatar\" src={user.avatar.img_url} alt={user.avatar.name}/>\n            </div>\n            <div className=\"grid-3\">\n                <h2>Username: {user.username}</h2>\n                <h3>Avatar: {user.avatar.name}</h3>\n                <Button onClick={() => handleDelete(user)}>Delete Profile</Button>\n            </div>\n            <div className=\"grid-4\">\n                <h2>Conquered Quest-ions</h2>\n            </div>\n            <div className=\"grid-5\">\n                {conquered(questions)}\n            </div>\n            <div className=\"grid-6\">\n                {showQ ? <p>{visibleQ.question}</p> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react'\n\nexport default function VictoryPage() {\n    return (\n        <div>\n            <h1 className=\"confetti\">Congratulations!</h1>\n            <h2>You made it to the top of Mount Algo!</h2>\n            <h4>More adventures coming soon!</h4>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport VictoryPage from './VictoryPage.js'\nimport { Button, Input, FormField, Label } from '../styles'\nimport { useNavigate } from 'react-router-dom'\nimport swal from 'sweetalert'\nimport '../Gameboard.css'\n\nfunction GameBoard({user, setUser, questions}) {\n    const navigate = useNavigate()\n    const [solution, setSolution] = useState('')\n\n    function checkAnswer(e) {\n        e.preventDefault();\n        console.log(user)\n        if(`${solution}` === `${questions[user.score].answer}`) {\n            fetch(`/users/${user.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\" : \"application/json\",\n                },\n                body: JSON.stringify({\n                    score: user.score\n                })\n            })\n            .then(response => response.json())\n            .then(data => setUser(data))\n        } else {\n            swal(\"Try Again\")\n            console.log('Incorrect Solution: ' + solution )\n        }\n    }\n\n\n    return (\n        <>\n        <div id=\"gameboard\">\n            <div className=\"greeting\">\n                <h2>{`Welcome ${user.username}, the ${user.avatar.name}`}</h2>\n            </div>\n            <div className=\"question-text\">\n                <h2>{user.score < 5 ? `Quest ${user.score + 1}` : null }</h2>\n                <p>{user.score < 5 ? `${questions[user.score].prompt}` : null }</p>\n                <p>{user.score < 5 ? `${questions[user.score].question}` : null}</p>\n                {user.score === 5 && <VictoryPage />}\n            </div>\n            {user.score < 5 ? (\n                <div className=\"input-field\">\n                    <form className=\"form\" onSubmit={checkAnswer}>\n                        <FormField>\n                            <Label>ANSWER</Label>\n                            <Input type=\"text\"\n                            id=\"solution\"\n                            value={solution}\n                            onChange={(e) => setSolution(e.target.value)}\n                            />\n                            <Button type=\"submit\">SUBMIT</Button>\n                        </FormField>\n                    </form>\n                </div> ) : \n                <Button className=\"end\" onClick={() => {navigate('/')}}>RETURN HOME</Button> \n                }\n            {user.score===0? <img src={user.avatar.img_url} className=\"q1-avatar\" alt={user.avatar.name}/> : null}\n            {user.score===1? <img src={user.avatar.img_url} className=\"q2-avatar\" alt={user.avatar.name}/> : null}\n            {user.score===2? <img src={user.avatar.img_url} className=\"q3-avatar\" alt={user.avatar.name}/> : null}\n            {user.score===3? <img src={user.avatar.img_url} className=\"q4-avatar\" alt={user.avatar.name}/> : null}\n            {user.score===4? <img src={user.avatar.img_url} className=\"q5-avatar\" alt={user.avatar.name}/> : null}\n            {user.score===5? <img src={user.avatar.img_url} className=\"winner-avatar\" alt={user.avatar.name}/> : null}\n            <Label className=\"gatekeeper\">The Gatekeeper</Label>\n            <Label className=\"elf\">Elven Pass</Label>\n            <Label className=\"inn\">Gambler's Inn</Label>\n            <Label className=\"hermit\">Hermit's Hut</Label>\n            <Label className=\"cylean\">Cubic Point</Label>\n            <Label className=\"summit\">The Summit</Label>\n        </div>\n        </>\n    )\n}\n\nexport default GameBoard\n","import React from 'react'\n\nfunction Card({data, idx}) {\n    // console.log(data.sort((a, b) => a.score > b.score))\n    return (\n        <div id=\"profile-card\">\n            <div className='grid-2'>\n                <img id='profile-avatar' src={data.avatar.img_url} alt={data.avatar.name}/>\n            </div>\n            <div className='grid-3'>\n                <h2>Rank: {idx + 1}</h2>\n                <h2>Score: {data.score}</h2>\n                <h2>{idx === 0 ? `👑 ${data.username}` : data.username}</h2>\n                <h3>{data.avatar.name}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Card\n","import React, {useState, useEffect} from 'react'\nimport Card from './Card'\n\nfunction Leaderboard(){\n    const [usersData, setUsersData] = useState([])\n\n    useEffect(() => {\n        fetch('/users') \n        .then(resp => resp.json())\n        .then(data => setUsersData(data.sort((a, b) => {\n            if(a.score < b.score) return 1\n            else return -1\n        })))\n    }, []);\n    console.log(usersData)\n    return usersData.map((data) => <Card idx={usersData.indexOf(data)} key={data.id} data={data}/>)\n}\n\n// const LeaderboardContent = styled.div`\n//     margin-top: 200px;\n//     position: relative;\n//     height: 100%;\n//     align-items:center;\n//     box-sizing: border-box;\n//     display: flex;\n//     justify-content: center;\n//     color: #3c4159;\n//     font-family: \"Copperplate\", fantasy\n// `\nexport default Leaderboard","import './App.css';\nimport Login from './components/Login';\nimport Signup from './components/Signup'\nimport Header from './components/Header';\nimport LandingPage from './components/LandingPage';\nimport Profile from './components/Profile';\nimport {Routes, Route} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport GameBoard from './components/GameBoard';\nimport Leaderboard from './components/Leaderboard'\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [questions, setQuestions] = useState([])\n\n  useEffect(() => {\n    fetch('/questions')\n      .then(resp => resp.json())\n      .then(data => {\n          setQuestions(data)\n      });\n    }, []);\n\n    useEffect(() => {\n      fetch('/me')\n      .then(response => {\n        console.log(response)\n        if (response.ok) {\n          response.json()\n          .then(user => {\n            setUser(user);\n          });\n        } else {console.log(\"not yet\")}\n      });\n    }, []);\n\n  return (\n    <div className=\"App\">\n      <Header setLoggedIn={setUser} loggedIn={user}/>\n      <Routes>\n        <Route exact path='/' element={<LandingPage isLoggedIn={user}/>}/>\n        <Route exact path='/login' element={user === null ? <Login onLogin={setUser}/> : null} />\n        <Route exact path='/signup' element={user === null ? <Signup onLogin={setUser}/> : null} />\n        <Route exact path='/play' element={<GameBoard user={user} setUser={setUser} questions={questions}/>} />\n        <Route exact path= '/profile' element={user? <Profile user={user} resetUser={setUser} questions={questions} /> : null} />\n        <Route exact path='/leaderboard' element={<Leaderboard />} />\n      </Routes>\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}